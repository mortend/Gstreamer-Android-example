apply plugin: 'com.android.application'

def gstreamerDir = 'C:/gstreamer/android/armv7'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gst_sdk_tutorials.tutorial_5"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters = ['armeabi-v7a']
        }
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                arguments "-DGST_DIR='${gstreamerDir}'"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0-alpha3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

task copySharedLibraries {
    copy {
        from "${gstreamerDir}/lib/libgstreamer_android.so"
        into file('src/main/jniLibs/armeabi-v7a')
    }
}

tasks.whenTaskAdded {
    task-> if (task.name.contains('external') && !task.name.contains('Clean')) {
        task.dependsOn(copySharedLibraries)
    }
}
